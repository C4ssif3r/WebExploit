def run():
    '''
    MIT License

Copyright (c) 2022 MJi | DarkƤwn [github.com/c4ssif3r]

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
'''
    import time as t
    import os, sys
    
    try:
        from colorama import Fore as f
        import requests as r
        from fake_useragent import UserAgent
        agent = UserAgent()
    #import baner
        from random import choice
        from fake_headers import Headers
    except:
        print ('\n\033[3m please run \' pip install -r reqirements.txt \' ')
        sys.exit()
    #------------
    #{f.WHITE}[{f.GREEN}S{f.WHITE}]
    bold = "\033[1m"
    nbold = "\033[0m"
    italic = "\033[3m"
    # {bold}
    # {nbold}
    print (f'''\033[5m
                           ░▒█▀▀▄░░▀░░█▀▀▄░▒█▀▀▄░▄▀▀▄░█▀▀░▀█▀░█▀▀░█▀▀▄
                           ░▒█░▒█░░█▀░█▄▄▀░▒█▀▀▄░█░░█░▀▀▄░░█░░█▀▀░█▄▄▀
                           ░▒█▄▄█░▀▀▀░▀░▀▀░▒█▄▄█░░▀▀░░▀▀▀░░▀░░▀▀▀░▀░▀▀ {nbold}''', end='')
    print(f'{italic}From{nbold} : ', end='')
    #create flush text [simple]
    print(f'{red}{bold}', end='', flush=True)
    print(f'{bold}W', end='', flush=True)
    t.sleep(0.5)
    print('e', end='', flush=True)
    t.sleep(0.7)
    print('b', end='', flush=True)
    t.sleep(0.4)
    print('E', end='', flush=True)
    t.sleep(0.1)
    print('x', end='', flush=True)
    t.sleep(0.2)
    print('p', end='', flush=True)
    t.sleep(0.3)
    print('l', end='', flush=True)
    t.sleep(0.4)
    print('o', end='', flush=True)
    t.sleep(0.5)
    print('i', end='', flush=True)
    t.sleep(1.5)
    print(f't{nbold}', flush=True)

    t.sleep(1)

    print (f'\n      {bold}{f.GREEN}[{f.WHITE}DIRBOSTER{f.GREEN}]{f.WHITE} {f.RED}DirBoster{f.WHITE}{nbold} advanced tool for find directory AND files in your {bold}TARGET SITE{nbold} !\n\n\n')
    t.sleep(3)
    print (f'\n      {f.WHITE}[{f.YELLOW}WARNING{f.WHITE}] enter URL patch file\n')
    t.sleep(1)
    print (f'      {f.WHITE}[{f.YELLOW}WARNING{f.WHITE}] Enter URL\'s without [/] \n')
    t.sleep(1.5)
    print (f'      {f.WHITE}[{f.BLUE}{bold}EXAMPLE{nbold}{f.WHITE}] test.com/{f.RED}{bold}etc{nbold}{f.WHITE} [etc => YourPatch]\n')
    t.sleep(2)
    print (f'      {f.WHITE}[{f.YELLOW}WARNING{f.WHITE}] Enter For using {bold}DEFAULT PATCH{nbold} FILE \n')
    dirss = input(f'  {f.WHITE}[{f.CYAN}{bold}WebExploit{f.WHITE}{nbold}@{f.RED}DirBoster/{bold}DIRFILE{nbold}{f.WHITE} enter \'DIR\' file for BruteForce[.txt]:#{f.GREEN}{bold} ')
    print('')
    t.sleep(1)
   # print (f'      {f.WHITE}{nbold}[{f.GREEN}{bold}WebExploit{f.WHITE}{nbold}@{f.RED}DirBoster/{bold}SET{nbold}{f.WHITE}] {f.CYAN}DirFile{f.WHITE} >>> {bold}{dirs}{nbold}\n')

    #dirs = open(dirs, 'r').read().split()

    try:
        dirs = open(dirss, 'r').read().split()
        print (f'      {f.WHITE}[{f.GREEN}{bold}WebExploit{nbold}{f.WHITE}@{nbold}{f.RED}DirBoster/{f.WHITE}{bold}LOAD-LENGHT{nbold}{f.WHITE}] LOADED {bold} %s {nbold} DirPaths {bold}Successfully...{nbold}\n' % len(dirs))
        print (f'      {f.WHITE}{nbold}[{f.GREEN}{bold}WebExploit{f.WHITE}{nbold}@{f.RED}DirBoster/{bold}SET{nbold}{f.WHITE}] {f.CYAN}DirFile{f.WHITE} >>> {bold}{dirss}{nbold}\n')
        t.sleep(1)

    except FileNotFoundError:
        dirs = open("default-dirs.txt" , 'r').read().split()
        print (f'\n      {f.WHITE}[{f.RED}{bold}ERROR{nbold}{f.WHITE}]{f.YELLOW} You Not Entered {bold}DirPaths{f.WHITE}{nbold}[{bold}{f.YELLOW}FILE{nbold}{f.WHITE}] USING {bold}{f.GREEN}DEFAULT FILE !{nbold}{f.WHITE}\n')
        print (f'      {f.WHITE}[{f.GREEN}{bold}WebExploit{nbold}{f.WHITE}@{nbold}{f.RED}DirBoster/{f.WHITE}LOAD-{bold}DEFAULT{nbold}{f.WHITE}] LOADED {bold} %s {nbold} DirPaths {bold}Successfully...{nbold}\n\n' % len(dirs))
        t.sleep(1)

    url = input(f'  {f.WHITE}[{f.CYAN}{bold}WebExploit{nbold}{f.WHITE}@{f.RED}DirBoster/{bold}URL{nbold}{f.WHITE}] Enter URL With [http://, https://]:#{f.GREEN}{bold} ')
    print(f'{nbold}')
    t.sleep(0.5)
    #print (f'      {f.WHITE}[{f.GREEN}{bold}WebExploit{f.WHITE}{nbold}@{f.RED}DirBoster/{bold}URL{nbold}{f.WHITE}]{f.WHITE} >>> {bold}{url}{nbold}\n')

    if len(url) <= 5:
        while True:
            try:
                print(f'\n      {f.WHITE}[{f.RED}{bold}ERROR{f.WHITE}{nbold}] PLZ ENTER A {bold}URL{nbold} !')
                print(f'\n      {f.WHITE}[{f.RED}{bold}WARNING{f.WHITE}{bold}]CTRL+C{nbold} For Abort !\n')
                url = input(f'  {f.WHITE}[{f.CYAN}{bold}WebExploit{nbold}{f.RED}/DirBoster/{bold}URL{nbold}{f.WHITE}] Enter URL With [http://, https://]:#{f.GREEN}{bold} ')
                print('')
                if len(url) <= 5:
                    continue
                else:
                    break
            except KeyboardInterrupt:
                print(f'\n\n      {f.WHITE}[{f.RED}{bold}ERROR{f.WHITE}{nbold}] TERMINATED BY {bold}USER{nbold} EXITTING . . .')
                t.sleep(2)
                sys.exit(0)

    if 'https://' not in url:
        if 'http://' not in url:
            print(f'\n      {f.WHITE}[{f.YELLOW}{bold}WARNING{f.WHITE}{nbold}] YOU NOT ENTERED URL WITH HTTP:// OR HTTPS:// {bold}{f.CYAN}WebExploit{nbold}{f.WHITE} ADDING {bold}AUTOMATICALLY{nbold} HTTP:// TO {url} !\n')
            url = (f'http://{url}')
            #print (f'      {f.WHITE}[{f.GREEN}{bold}WebExploit{f.WHITE}{nbold}@{f.RED}DirBoster/{bold}URL{nbold}{f.WHITE}]{f.WHITE} >>> {bold}{url}{nbold}\n\n')

        else:
            pass
    if url[-1:] == '/':
        pass
    else:
        url = (f'{url}/')

    print (f'      {f.WHITE}[{f.GREEN}{bold}WebExploit{f.WHITE}{nbold}@{f.RED}DirBoster/{bold}URL{nbold}{f.WHITE}]{f.WHITE} >>> {bold}{url}{nbold}\n')

    slep = input(f'  {f.WHITE}[{f.CYAN}{bold}WebExploit{nbold}{f.RED}/DirBoster/{bold}SLEEP{nbold}{f.WHITE}] Enter Delay Time [Default is 3 Sec !]:#{f.GREEN}{bold} ')
    print('\n')

    if '.' in slep:
        print (f'      {f.WHITE}[{f.YELLOW}WARNING{f.WHITE}] YOU CAN\'T USING Float\'s in DelayTime ! \n')
        print (f'      {f.WHITE}[{f.YELLOW}{bold}SET-DEFAULT{f.WHITE}{nbold}] USING Default SLEEP TIME (3 sec) \n')
        slep = 3
    else:
        pass

        try:
            slep = int(slep)
            t.sleep(int(slep))
        except TypeError:
            print (f'      {f.WHITE}[{f.RED}{bold}ERROR{f.WHITE}{nbold}] type {slep} not int ! \n')
            print (f'      {f.WHITE}[{f.YELLOW}{bold}SET-DEFAULT{f.WHITE}{nbold}] USING Default SLEEP TIME (3 sec) \n')
            slep = 3

        finally:
            print (f'      {f.WHITE}[{f.GREEN}{bold}WebExploit{f.WHITE}{nbold}@{f.RED}DirBoster/{bold}SLEEP{nbold}{f.WHITE}]{f.WHITE} >>> {bold}{slep}{nbold}\n\n')

        bw_ = ['chrome','firefox','opera']
        os_ = ['win','mac'',lin']
        TF = ['True','False']

        print (f'      {f.WHITE}[{f.GREEN}INFO{nbold}{f.WHITE}] Fake {bold}{f.CYAN}HTTP Header{nbold}{f.WHITE} Crated ! \n')
        t.sleep(3.5)
        print (f'      {f.WHITE}[{f.GREEN}{bold}INFO{nbold}{f.WHITE}] {bold}DIRBOSTER{nbold} LAUNCH ATTACK . . . \n')

        print (f'      {f.WHITE}[{f.GREEN}INFO{nbold}{f.WHITE}] sleeping 5 sec after attack ! \n')

        t.sleep(5)
        # start ?
        print (f'      {f.WHITE}[{f.GREEN}{bold}WEB-EXPLOIT{nbold}{f.WHITE}] ATTACK :\ <\STARTED>! :\\ \n')
    for dir in dirs:
        t.sleep(slep)
        browser = choice(bw_)
        operation_system = choice(os_)
        T_F = choice(TF)

        headers = Headers(
        browser=browser,
        os=operation_system,
        headers=T_F).generate()

        #headers = {'User-Agent': agent.random}

        # make request
        finally_url = (url+dir)
        #for debug :
        #print (finally_url)
        try:
            Result = r.get(finally_url, headers=headers)
        except Exception as err:
            print (f'\n      {f.WHITE}[{f.RED}{bold}ERROR{nbold}{f.WHITE}]{f.YELLOW} HAVE {err} ERROR ! IN URL {f.WHITE}~> [{f.RED}{bold}{finally_url}{nbold}{f.WHITE}] \n')
            continue
        if Result.status_code == 200 or Result.status_code in range(0,299):
            print (f'   {f.WHITE}[{f.CYAN}{bold}WebExploit{f.WHITE}{nbold}@{f.RED}DirBoster/{f.WHITE}STATUS-{bold}{f.GREEN}{Result.status_code}{nbold}{f.WHITE}] FOUNDED {f.WHITE}~> [{f.GREEN}{bold}{finally_url}{nbold}{f.WHITE}] \n')
        #elif ?
        if Result.status_code == 404:
            print (f'   {f.WHITE}[{f.YELLOW}{bold}WebExploit{f.WHITE}{nbold}@{f.RED}DirBoster/{f.WHITE}STATUS-{f.YELLOW}{bold}{Result.status_code}{nbold}{f.WHITE}] NOT FOUND {f.WHITE}~> [{f.RED}{bold}{finally_url}{nbold}{f.WHITE}] \n')
        #elif ?
        if Result.status_code == 403:
            print (f'   {f.WHITE}[{f.RED}{bold}WebExploit{f.WHITE}{nbold}@{f.CYAN}DirBoster/{f.WHITE}STATUS-{bold}{f.RED}{Result.status_code}{nbold}{f.WHITE}]{f.RED} FORBIDDEN {f.WHITE}~> [{f.RED}{bold}{finally_url}{nbold}{f.WHITE}] \n')
        #elif ?
        if Result.status_code in range(499,600):
            print (f'   {f.WHITE}[{f.CYAN}{bold}WebExploit{f.WHITE}{nbold}@{f.RED}DirBoster/{f.WHITE}STATUS-{f.YELLOW}{Result.status_code}{nbold}{f.WHITE}]{f.RED} SERVER ERROR {f.WHITE}~> [{f.YELLOW}{finally_url}{nbold}{f.WHITE}] \n')

        if Result.status_code == 301 or Result.status_code == 302:
            print (f'   {f.WHITE}[{f.CYAN}{bold}WebExploit{f.WHITE}{nbold}@{f.RED}DirBoster/{f.WHITE}STATUS-{f.YELLOW}{Result.status_code}{nbold}{f.WHITE}]{f.CYAN} REDIRECT {f.WHITE}~> [{f.YELLOW}{finally_url}{nbold}{f.WHITE}] \n')

        else:
            pass
            #print (f'   {f.WHITE}[{f.CYAN}{bold}WebExploit{f.WHITE}{nbold}@{f.RED}DirBoster/{f.WHITE}STATUS-{f.YELLOW}{Result.status_code}{nbold}{f.WHITE}]{f.RED} CAN\'T VERIFY {f.WHITE}~> [{f.YELLOW}{finally_url}{nbold}{f.WHITE}] \n')


# DirBoster a tool from WebExploit

#dirboster()
