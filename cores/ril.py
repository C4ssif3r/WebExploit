def run():
    '''
    MIT License

Copyright (c) 2022 MJi | DarkƤwn [github.com/c4ssif3r]

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
'''
    #import re
    # reverse ip lookup ril
    import time as t
    from colorama import Fore as f
    from random import choice
    import sys, os
    import requests as r
    import json as j
    from fake_useragent import UserAgent
    agent = UserAgent()
    from fake_headers import Headers


    black = "\033[0;30m"
    red = "\033[0;31m"
    green = "\033[0;32m"
    brown = "\033[0;33m"
    blue = "\033[0;34m"
    purple = "\033[0;35m"
    cyan = "\033[0;36m"
    l_gray = "\033[0;37m"
    dark_gray = "\033[1;30m"
    l_red = "\033[1;31m"
    l_green = "\033[1;32m"
    yellow = "\033[1;33m"
    l_blue = "\033[1;34m"
    l_purple = "\033[1;35m"
    l_cyan = "\033[1;36m"
    l_white = "\033[1;37m"
    faint = "\033[2m"
    italic = "\033[3m"
    underline = "\033[4m"
    blink = "\033[5m"
    nefative = "\033[7m"
    cross = "\033[9m"
    ended = "\033[0m"
    bold = "\033[1m"
    nbold = "\033[0m"
    white = f.WHITE
    bnr = ['''

                         ▀███▀▀▀██▄     ▀████▀   ▀████▀
                           ██   ▀██▄      ██       ██
                           ██   ▄██       ██       ██
                           ▓██████        ██       ██
                           ▓█  ██▄        █▓       █▓     ▄
                           ▓█   ▀▓█       █▓       █▓    ▒█
                           ▓█  ▓ ▓▓       ▓▓       ▓▓     ▓
                           ▓▓   ▀▓▓▓      ▒▓       ▓▒    ▓▓
                         ▒ ▒▓▒  ▒ ▒ ▒   ▒▓▒ ▒    ▒ ▒▒ ▓▒ ▒  ''', '''
                          ██▀███        ██     ██▓
                         ▓██ ▒ ██▒    ▒▓██    ▓██▒
                         ▓██ ░▄█ ▒    ░▒██    ▒██░
                         ▒██▀▀█▄       ░██    ▒██░
                         ░██▓ ▒██▒     ░██    ░██████
                         ░ ▒▓ ░▒▓░     ░▓     ░ ▒░▓
                           ░▒ ░ ▒░      ▒     ░ ░ ▒
                            ░   ░       ▒       ░ ░
                            ░           ░         ░ ''']

    def r_bnr(bnr):
        return choice(bnr)

    print (f'{blink}{r_bnr(bnr)}{ended}', end='')
    t.sleep(2)
    print(f' {italic}From{ended} : ', end='')
    #create flush text [simple]
    print(f'{red}{bold}', end='', flush=True)
    print(f'{bold}W', end='', flush=True)
    t.sleep(0.5)
    print('e', end='', flush=True)
    t.sleep(0.7)
    print('b', end='', flush=True)
    t.sleep(0.4)
    print('E', end='', flush=True)
    t.sleep(0.1)
    print('x', end='', flush=True)
    t.sleep(0.2)
    print('p', end='', flush=True)
    t.sleep(0.3)
    print('l', end='', flush=True)
    t.sleep(0.4)
    print('o', end='', flush=True)
    t.sleep(0.5)
    print('i', end='', flush=True)
    t.sleep(1.5)
    print(f't{ended}', flush=True)
    nbold = "\033[0m" # tahe koskholi !
    t.sleep(1)



    print (f'\n                      {bold}{f.GREEN}[{f.WHITE}RIL{f.GREEN}]{f.WHITE}{f.RED} R.I.L{f.WHITE}{nbold} {bold}R{nbold}everce {bold}I{nbold}p {bold}L{nbold}ookup tool !\n\n\n')
    t.sleep(2)
    print (f'\n      {f.WHITE}[{f.GREEN}{bold}INFO{f.WHITE}{nbold}@{f.RED}R.I.L/{f.CYAN}{bold}REVERCE IP LOOKUP]{white} advanced tool for find sites on a host  {red}{bold} RIL {nbold}{white} tool !\n')

    while True:
        try:
            ur = input(f'  {f.WHITE}[{f.CYAN}{bold}WebExploit{f.WHITE}{nbold}@{f.RED}R.I.L/{bold}URL{nbold}{f.WHITE} enter {bold}\'URL or IP{nbold}\' [ex: GOOGLE.com, 1.1.1.1]:#{f.GREEN}{bold} ')
            print(f'{nbold}')

            if ur:
                break
            else:
                continue

        except KeyboardInterrupt:
            print(f'\n\n      {nbold}{f.WHITE}[{f.RED}{bold}ERROR{f.WHITE}{nbold}] TERMINATED BY {bold}USER{nbold} EXITTING . . .')
            t.sleep(2)
 #           break
            sys.exit(0)

    if 'http://' in ur:
        try:
            url = ur.replace('http://','')
        except:
            url = ur
    if 'https://' in ur:
        try:
            url = ur.replace('https://','')
        except:
            url = ur
    else:
        url = ur

    print (f'      {f.WHITE}[{f.GREEN}{bold}WebExploit{f.WHITE}{nbold}@{f.RED}RIL/{bold}URL{nbold}{f.WHITE}]{f.WHITE} >>> {bold}{url}{nbold}\n')

    t.sleep(3)

#    data = ('remoteAddress='+url+'&key=')
    data = {'remoteAddress': url}
    leng = data

    lenght = len(leng)

    hed = {'Host': 'domains.yougetsignal.com',
'User-Agent': 'Mozilla/5.0 (X11; Linux aarch64; rv:91.0) Gecko/20100101 Firefox/91.0',
'Accept': 'text/javascript, text/html, application/xml, text/xml, */*',
'Accept-Language': 'en-US,en;q=0.5',
'Accept-Encoding': 'gzip, deflate, br',
'X-Requested-With': 'XMLHttpRequest',
'X-Prototype-Version': '1.6.0',
'Content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
'Origin': 'https://www.yougetsignal.com',
'Connection': 'keep-alive',
'Content-Length': str(lenght),
'Referer': 'https://www.yougetsignal.com/',
'Sec-Fetch-Dest': 'empty',
'Sec-Fetch-Mode': 'cors',
'Sec-Fetch-Site': 'same-site'
}
    #print (hed)
    headers_random = Headers(
        browser='firefox',  # Generate Chrome , firefox UA
        os='win',  # Generate Windows, linux platform
        headers=True  # generate misc headers
        ).generate()


    try:
        #r.get('https://domains.yougetsignal.com', headers=header)
        result = r.post('https://domains.yougetsignal.com/domains.php', headers=hed, data=data)

    except Exception as error:
        print (f'   {f.WHITE}[{f.RED}{bold}ERROR{f.WHITE}{nbold}@{f.RED}R.I.L/{f.GREEN}REQUEST {nbold}{f.CYAN} BECAUSE: \'{bold}{error}{nbold}\' TRY WITH VPN{nbold}!\n')
        t.sleep(3)
        sys.exit()
        #print (f'\n   {f.WHITE}[{f.GREEN}{bold}INFO{f.WHITE}{nbold}@{f.RED}R.I.L/{f.CYAN}{bold}TRY] trying WITH RANDOM HEADER{green}{bold} REQUEST AGAIN . . .{nbold}{white} !\n')

        #result = r.post('https://domains.yougetsignal.com/domains.php', headers=headers_random, data=data)
    #input('enter for show domains')
    res = result.text
    ril = j.loads(res)

    status = ril['status']
    method = ril["resultsMethod"]
    LastScrape = ril["lastScrape"]
    domains_count = ril["domainCount"]
    remote_address = ril["remoteAddress"]
    domains = ril["domainArray"]
    try:
        mesg = ril["message"]
        print (f'   {f.WHITE}[{f.RED}{bold}ERROR{f.WHITE}{nbold}@{f.RED}R.I.L/{f.YELLOW}ERROR {nbold}{f.CYAN} BECAUSE: \'{bold}{mesg}{nbold}\' TRY WITH VPN {nbold}!\n')
        sys.exit()
    except:
        pass

    print (f'      {f.WHITE}[{bold}{f.RED}WebExploit{nbold}{f.WHITE}] {white}{bold}STATUS{nbold}{f.WHITE} >>> {bold}{green}{bold}{status}{nbold}')
    t.sleep(0.5)
        #print (f'      {f.WHITE}[{bold}{f.RED}WebExploit{nbold}{f.WHITE}] {white}{bold}METHOD{nbold}{f.WHITE} >>> {bold}{green}{bold}{method}{nbold}')
    t.sleep(0.5)
    print (f'      {f.WHITE}[{bold}{f.RED}WebExploit{nbold}{f.WHITE}] {white}{bold}LAST-SCRAPE{nbold}{f.WHITE} >>> {bold}{green}{bold}{LastScrape}{nbold}')
    t.sleep(0.5)
    print (f'      {f.WHITE}[{bold}{f.RED}WebExploit{nbold}{f.WHITE}] {white}{bold}DOMAINS-COUNT{nbold}{f.WHITE} >>> {bold}{green}{bold}{domains_count}{nbold}')
    t.sleep(0.5)
    print (f'      {f.WHITE}[{bold}{f.RED}WebExploit{nbold}{f.WHITE}] {white}{bold}REMOTE-ADDRESS{nbold}{f.WHITE} >>> {bold}{green}{bold}{remote_address}{nbold}')
    t.sleep(0.5)
    print (f'      {f.WHITE}[{bold}{f.RED}WebExploit{nbold}{f.WHITE}] {white}{bold}ALL DOMAINS{bold}{f.WHITE} ::: {bold}{green}{bold}')

    t.sleep(2)
    print(f"{italic}{yellow}-+-" * 10)
    for d, u in domains:
        print (f'      {f.WHITE}{nbold}[{italic}{f.RED}WebExploit{nbold}{f.WHITE}@{red}R.I.L/{blue}domains{white}] {yellow} × {d} ×')
        t.sleep(0.09)
    print (f'\n      {f.WHITE}[{f.GREEN}{bold}INFO{f.WHITE}{nbold}@{f.RED}R.I.L/{f.CYAN}{bold}Domains{white}]{italic} The WebExploit Founded  {red}{bold} {domains_count} {nbold}{white} on {bold}{url}\n\n')





